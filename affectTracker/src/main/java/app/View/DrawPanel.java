package app.View;

import app.Data.Circle;
import app.Model.Blackboard;

import javax.swing.*;
import javax.swing.border.MatteBorder;
import java.awt.*;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;

/**
 * The {@code DrawPanel} class is a custom {@link JPanel} that visually represents
 * circles stored in the {@link Blackboard}. Each circle is drawn with its respective
 * color, and an outline is added around each circle.
 * <p>
 * This panel is used as part of a graphical interface to display real-time visualizations
 * of the circles generated by the system. It ensures that each circle is displayed with
 * its fill color and a black border.
 *
 * @author Andrew Estrada
 * @author Sean Sponsler
 * @version 1.0
 */
public class DrawPanel extends JPanel implements PropertyChangeListener {
	
	public DrawPanel() {
		setBackground(Color.WHITE);
		setBorder(new MatteBorder(3, 3, 3, 3, Color.BLACK));
		Blackboard.getInstance().addChangeSupportListener(Blackboard.PROPERTY_NAME_VIEW_DATA, this);
	}
	
	@Override
	protected void paintComponent(Graphics g) {
		super.paintComponent(g);
		for (Circle c : Blackboard.getInstance().getCircleList()) {
			c.drawCircle(g);
		}
	}
	
	@Override
	public void propertyChange(PropertyChangeEvent evt) {
		repaint();
	}
}
